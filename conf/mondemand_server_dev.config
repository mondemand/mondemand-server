[
  { mondemand_server,
    [
      % LWES address and port to listen on, if UDP use address "0.0.0.0"
      { listener, [{"0.0.0.0",20602}, {"0.0.0.0",11211}] },
%      { listener, [{"0.0.0.0", 20502}, {"224.1.1.11", 22522}]},

      % dispatch list, each event listed is sent to the list of modules
      { dispatch,
        [
          % catch all, all events are sent to this one unless it's empty
          { "*",                   [ mondemand_backend_all_journaller,
                                     mondemand_backend_print ] },
          { "MonDemand::StatsMsg", [ mondemand_backend_stats_file,
                                     mondemand_backend_stats_aggregator,
                                     mondemand_backend_lwes ] },
          { "MonDemand::LogMsg",   [ mondemand_backend_log_file,
                                     mondemand_backend_lwes ] },
          { "MonDemand::TraceMsg", [ mondemand_backend_trace_file ] },
          { "MonDemand::PerfMsg",  [ mondemand_backend_lwes,
                                     mondemand_backend_performance_collate] }
        ]
      },

      % config for web server
      { web,
        [ { ip, "0.0.0.0" }, % bind to all interfaces
          { port, 20602 },   % port to bind on
          { log_dir, "/tmp/data/httpd/logs" },
          { dispatch,
            [
              {["tools", '*'],
                mondemand_server_fs_resource, [ {root, {privdir, mondemand_server, "www"}} ] },
              {["data", '*'],
                mondemand_server_fs_resource, [ {root, "tmp/data"} ] },
              {["tcp"],
                mondemand_http_resource, [] }
            ]
          }
        ]
      },

      { mappings,
        [
          { reload_seconds, 1 },
          { directory, "conf/mappings" }
        ]
      },

      { mondemand_backend_performance_collate,
        [
          {worker_mod, mondemand_backend_performance_collate},
          {max_age, 60}, % flush after no update for 60 seconds
          {flush_interval, 1} % flush every second
%          , {fixup_mod, perf_to_stats}
        ]
      },
      % config for particular modules
      { mondemand_backend_all_journaller,
        [
          % the directory to store journals
          { root, [ "tmp","data","journals"] },
          % the prefix for journals
          { name, "all_events" },
          % the interval to rotate journal files
          { interval, 3600 }
        ]
      },
      { mondemand_backend_print,
        [
          {worker_mod, mondemand_backend_print}
        ]
      },
      { mondemand_backend_stats_file,
        [
          % the directory to store stats
          { root, [ "tmp","data","stats","raw"] }
        ]
      },
      { mondemand_backend_stats_aggregator,
        [
          {worker_mod, mondemand_backend_stats_aggregator}
        ]
      },
      { mondemand_backend_lwes,
        [
          {worker_mod, mondemand_backend_lwes_worker},
%          {lwes, {2, [{"127.0.0.1",50205},{"127.0.0.1",51215}]} },
%          {extra_context, [{cluster, ca}]}
          {lwes, {1, [{"127.0.0.1",11311}]}},
          {extra_context, []}
        ]
      },
      { mondemand_backend_log_file,
        [
          % the directory to store logs
          { root, ["tmp","data","log"]}
        ]
      },
      { mondemand_backend_trace_file,
        [
          % necessary for pooling
          { worker_mod, mondemand_backend_trace_file },

          % these fields are looked up in the trace event and added to
          % the filename separated by "-"s
          { extra_fields, [ <<"queasy.service">>, <<"queasy.type">> ] },

          % the directory to store traces
          { root, [ "tmp","data","trace"] },

          { dispatch,
            [
              { ["trace", owner, id, file],
                mondemand_backend_trace_resource,
                [ {root, "tmp/data" } ]
              },
              { ["trace", owner, id],
                mondemand_backend_trace_resource,
                [ {root, "tmp/data" } ]
              },
              { ["trace", owner],
                mondemand_backend_trace_resource,
                [ {root, "tmp/data" } ]
              },
              { ["trace"],
                mondemand_backend_trace_resource,
                [ {root, "tmp/data" } ]
              }
            ]
          }
        ]
      }
    ]
  },
  { mondemand, [ % when we do emit, emit to here
                 { lwes_channel, { "127.0.0.1", 21612 } },

                 % include vmstats
                 { vmstats, [{program_id, mondemand_server_erlang}] },

                 % override host for outgoing events
                 { sender_host, "dev.local" },

                 % override the default flushing function with our own
                 { flush_config,
                   { mondemand_server_stats, flush_init, flush_one }
                 }
               ]
  }
].
